{"version":3,"sources":["constants/ChartConstant.js","views/_redux/project/projectCrud.js","views/_redux/project/projectActions.js","views/app-views/dashboards/sales/ProjectList.js","views/app-views/dashboards/sales/index.js"],"names":["COLOR_2","COLORS","apexLineChartDefaultOption","chart","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","lineCap","legend","position","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","series","seriesIndex","dataPointIndex","xaxis","categories","grid","lines","yaxis","apexAreaChartDefaultOption","apexBarChartDefaultOption","plotOptions","bar","horizontal","columnWidth","startingShapre","endingShape","inverseOrder","fill","opacity","tooltip","y","formatter","apexPieChartDefaultOption","pie","size","donut","labels","total","showAlways","label","fontSize","fontFamily","fontWeight","color","seriesTotals","reduce","a","b","apexSparklineChartDefultOption","type","sparkline","fixed","x","title","seriesName","marker","PRO_URL","API_URL","actions","projectSlice","addProject","productForCreation","dispatch","product","axios","post","headers","Authorization","catch","error","clientMessage","catchError","callType","callTypes","action","getProjectLists","get","then","data","projectListFetched","list","updateProject","requestFromServer","deleteProject","id","delete","ProjectList","TextArea","Input","React","useState","visible","setVisible","_id","currency","description","desc","values","setValues","style","padding","useDispatch","useHistory","gutter","xs","sm","md","lg","direction","Flex","className","flexDirection","justifyContent","marginTop","marginRight","onClick","localStorage","setItem","window","location","href","EyeOutlined","EditOutlined","DeleteColumnOutlined","onOk","onCancel","okText","cancelText","initialValues","layout","name","span","margin","Item","rules","required","fullwidth","onChange","e","prevState","target","value","rows","placeholder","allowClear","Option","Select","SalesDashboard","useEffect","tmp","JSON","parse","getItem","authData","projectListData","useSelector","state","project","hash","md5","String","email","trim","toLowerCase","gravatar","xl","xxl","src","align","borderRadius","textAlign","firstname","lastLogin","PlusOutlined","map","it"],"mappings":"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","file":"static/js/16.3b7f1119.chunk.js","sourcesContent":["export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 3,\r\n\t\tcurve: 'smooth',\r\n\t\tlineCap: 'round'\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tgrid: {\r\n\t\txaxis: {\r\n\t\t\tlines: {\r\n\t\t\t\tshow: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t  yaxis: {\r\n\t\t\tlines: {\r\n\t\t\t  show: false,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\r\n\r\nexport const apexBarChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tplotOptions: {\r\n\t\tbar: {\r\n\t\t\thorizontal: false,\r\n\t\t\tcolumnWidth: '25px',\r\n\t\t\tstartingShapre: 'rounded',\r\n\t\t\tendingShape: 'rounded'\r\n\t\t},\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\tshow: true,\r\n\t\twidth: 6,\r\n\t\tcurve: 'smooth',\r\n\t\tcolors: ['transparent']\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\tinverseOrder: true,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tfill: {\r\n\t\topacity: 1\r\n\t},\r\n\ttooltip: {\r\n\t\ty: {\r\n\t\t\tformatter: val => (`${val}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const apexPieChartDefaultOption = {\r\n\tcolors: [...COLORS],\r\n\tplotOptions: {\r\n\t\tpie: {\r\n\t\t\tsize: 50,\r\n\t\t  donut: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\ttotal: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tshowAlways: true,\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\tfontFamily: 'Roboto',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\tcolor: '#1a3353',\r\n\t\t\t\t\t\tformatter: function (w) {\r\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a + b\r\n\t\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsize: '87%'\r\n\t\t  }\r\n\t\t}\r\n\t},\r\n\tlabels: [],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tlegend: {\r\n\t\tshow: false\r\n\t}\r\n}\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n\tchart: {\r\n\t\ttype: 'line',\r\n\t\tsparkline: {\r\n\t\t\tenabled: true\r\n\t\t}\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 2,\r\n\t\tcurve: 'smooth'\r\n\t},\r\n\ttooltip: {\r\n\t\tfixed: {\r\n\t\t  \tenabled: false\r\n\t\t},\r\n\t\tx: {\r\n\t\t  \tshow: false\r\n\t\t},\r\n\t\ty: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function (seriesName) {\r\n\t\t\t\t\treturn ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t  show: false\r\n\t\t}\r\n\t}\r\n}","import axios from \"axios\";\r\nimport { API_URL } from \"../../../_utiles/config\";\r\n\r\nexport const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\nexport const PRO_URL = `${API_URL}/project`;\r\n\r\nexport function addProject(product) {\r\n  return axios.post(`${PRO_URL}/add-project`, product, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsInJvbGUiOjEsImlhdCI6MTYyMTg2NDY4OX0.CSQnjulYvsKewlUINhB__jrrsKAicXbyviVmgZ0zOYc`,\r\n    },\r\n  });\r\n}\r\n\r\nexport function getProjectLists() {\r\n  return axios.get(`${PRO_URL}`, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsInJvbGUiOjEsImlhdCI6MTYyMTg2NDY4OX0.CSQnjulYvsKewlUINhB__jrrsKAicXbyviVmgZ0zOYc`,\r\n    },\r\n  });\r\n}\r\n\r\nexport function updateProject(data) {\r\n  return axios.post(`${PRO_URL}/update`, data, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsInJvbGUiOjEsImlhdCI6MTYyMTg2NDY4OX0.CSQnjulYvsKewlUINhB__jrrsKAicXbyviVmgZ0zOYc`,\r\n    },\r\n  });\r\n}\r\n\r\nexport function deleteProject(id) {\r\n  return axios.delete(`${PRO_URL}/${id}`, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsInJvbGUiOjEsImlhdCI6MTYyMTg2NDY4OX0.CSQnjulYvsKewlUINhB__jrrsKAicXbyviVmgZ0zOYc`,\r\n    },\r\n  });\r\n}\r\n\r\n// export function updateUser(data) {\r\n//   return axios.post(`${PRO_URL}/update/${data.id}`, data, {\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//       Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsInJvbGUiOjEsImlhdCI6MTYyMTg2NDY4OX0.CSQnjulYvsKewlUINhB__jrrsKAicXbyviVmgZ0zOYc`,\r\n//     },\r\n//   });\r\n// }\r\n\r\n// export function deleteUser(id) {\r\n//   return axios.delete(`${PRO_URL}/${id}`, {\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//       Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsInJvbGUiOjEsImlhdCI6MTYyMTg2NDY4OX0.CSQnjulYvsKewlUINhB__jrrsKAicXbyviVmgZ0zOYc`,\r\n//     },\r\n//   });\r\n// }\r\n","import * as requestFromServer from \"./projectCrud\";\r\nimport { projectSlice, callTypes } from \"./projectSlice\";\r\nimport MockUtils from \"../../../_utiles/mock.utils\";\r\n\r\nconst { actions } = projectSlice;\r\n\r\nexport const addProject = (productForCreation) => (dispatch) => {\r\n  // dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer.addProject(productForCreation).catch((error) => {\r\n    error.clientMessage = \"Can't create product\";\r\n    dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n  });\r\n};\r\n\r\nexport const getProjectLists = () => (dispatch) => {\r\n  // dispatch(actions.startCall({ callType: callTypes.list }));\r\n  return requestFromServer\r\n    .getProjectLists()\r\n    .then(({ data }) => {\r\n      dispatch(actions.projectListFetched({ data: data }));\r\n    })\r\n    .catch((error) => {\r\n      error.clientMessage = \"Can't find vendors\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const updateProject = (data) => (dispatch) => {\r\n  return requestFromServer.updateProject(data);\r\n};\r\n\r\nexport const deleteProject = (id) => (dispatch) => {\r\n  return requestFromServer.deleteProject(id);\r\n};\r\n\r\n// export const deleteUser = (id) => (dispatch) => {\r\n//   return requestFromServer.deleteUser(id);\r\n// };\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Space,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Select,\r\n} from \"antd\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport * as actions from \"../../../_redux/project/projectActions\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Link, Router } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  EyeOutlined,\r\n  EditOutlined,\r\n  DeleteColumnOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nfunction ProjectList({ list }) {\r\n  const { TextArea } = Input;\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [values, setValues] = React.useState({\r\n    _id: list._id,\r\n    title: list.title,\r\n    currency: list.currency,\r\n    description: list.desc,\r\n  });\r\n  const style = { padding: \"0 15px\" };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const hideModal = () => {\r\n    if (values.title && values.description && values.currency) {\r\n      setVisible(false);\r\n      dispatch(actions.updateProject(values));\r\n      // window.location.href = \"/app/dashboards\";\r\n    }\r\n  };\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const deleteProject = () => {\r\n    dispatch(actions.deleteProject(values._id));\r\n    window.location.href = \"/app/dashboards\";\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const viewUnits = (title) => {\r\n    // window.location.href = \"/app/units\";\r\n    localStorage.setItem(\"selectedTitle\", title);\r\n    window.location.href = \"/app/units\";\r\n  };\r\n\r\n  return (\r\n    <Card style={{ padding: \"40px\" }}>\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={24} md={24} lg={24}>\r\n          <Space direction=\"vertical\" size=\"10\">\r\n            <Flex\r\n              className=\"h-100\"\r\n              flexDirection=\"column\"\r\n              justifyContent=\"between\"\r\n            >\r\n              <div>\r\n                <h1 className=\"mb-0\">Project {list.title}</h1>\r\n                <span className=\"text-muted\">{list.desc}</span>\r\n              </div>\r\n              <Row style={{ marginTop: \"70px\" }}>\r\n                <Button\r\n                  style={{ marginRight: \"5px\" }}\r\n                  onClick={() => viewUnits(list.title)}\r\n                  type=\"primary\"\r\n                >\r\n                  <EyeOutlined /> View units of this project\r\n                </Button>\r\n\r\n                <Button\r\n                  onClick={showModal}\r\n                  style={{ marginRight: \"5px\" }}\r\n                  type=\"primary\"\r\n                >\r\n                  <EditOutlined />\r\n                  Edit this project\r\n                </Button>\r\n\r\n                <Button\r\n                  onClick={deleteProject}\r\n                  style={{ marginRight: \"5px\" }}\r\n                  type=\"danger\"\r\n                >\r\n                  <DeleteColumnOutlined />\r\n                  Delete this project\r\n                </Button>\r\n              </Row>\r\n            </Flex>\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        title=\"Edit Project\"\r\n        visible={visible}\r\n        onOk={hideModal}\r\n        onCancel={() => setVisible(false)}\r\n        okText=\"Submit\"\r\n        cancelText=\"Cancel\"\r\n        initialValues={values}\r\n      >\r\n        <Form layout=\"vertical\" name=\"control-hooks\" initialValues={values}>\r\n          <Row>\r\n            <Col span={20} style={{ margin: \"0 auto\" }}>\r\n              <Form.Item\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                style={style}\r\n                rules={[{ required: true }]}\r\n                fullwidth\r\n              >\r\n                <Input\r\n                  onChange={(e) =>\r\n                    setValues((prevState) => ({\r\n                      ...prevState,\r\n                      title: e.target.value,\r\n                    }))\r\n                  }\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                style={style}\r\n                rules={[{ required: true }]}\r\n                fullwidth\r\n              >\r\n                <TextArea\r\n                  rows={10}\r\n                  onChange={(e) =>\r\n                    setValues((prevState) => ({\r\n                      ...prevState,\r\n                      description: e.target.value,\r\n                    }))\r\n                  }\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"currency\"\r\n                label=\"Currency\"\r\n                rules={[{ required: true }]}\r\n                fullwidth\r\n              >\r\n                <Select\r\n                  placeholder=\"Select a option and change input text above\"\r\n                  // onChange={onGenderChange}\r\n                  allowClear\r\n                  onChange={(value) =>\r\n                    setValues((prevState) => ({\r\n                      ...prevState,\r\n                      currency: value,\r\n                    }))\r\n                  }\r\n                >\r\n                  <Option value=\"USD\">USD</Option>\r\n                  <Option value=\"EUR\">EUR</Option>\r\n                  <Option value=\"CAD\">CAD</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Card,\r\n  Image,\r\n  Avatar,\r\n  Select,\r\n  Modal,\r\n  Form,\r\n} from \"antd\";\r\nimport { Input } from \"antd\";\r\n\r\nimport Flex from \"components/shared-components/Flex\";\r\n\r\nimport { COLORS } from \"constants/ChartConstant\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport * as actions from \"../../../_redux/project/projectActions\";\r\nimport ProjectList from \"./ProjectList\";\r\nimport { PlusOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport md5 from \"md5\";\r\n\r\nconst { Option } = Select;\r\nconst style = { padding: \"0 15px\" };\r\n\r\nconst getPaymentStatus = (status) => {\r\n  if (status === \"Paid\") {\r\n    return \"success\";\r\n  }\r\n  if (status === \"Pending\") {\r\n    return \"warning\";\r\n  }\r\n  if (status === \"Expired\") {\r\n    return \"error\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\nconst getShippingStatus = (status) => {\r\n  if (status === \"Ready\") {\r\n    return \"blue\";\r\n  }\r\n  if (status === \"Shipped\") {\r\n    return \"cyan\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\nconst SalesDashboard = () => {\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(actions.getProjectLists());\r\n  }, []);\r\n  let tmp = JSON.parse(localStorage.getItem(\"auth_token\"));\r\n  const [authData, setAuthData] = React.useState(tmp);\r\n\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [values, setValues] = React.useState({\r\n    title: \"\",\r\n    currency: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const { TextArea } = Input;\r\n  const projectListData = useSelector((state) => state.project.projectListData);\r\n  const hideModal = () => {\r\n    if (values.title && values.description && values.currency) {\r\n      setVisible(false);\r\n      dispatch(actions.addProject(values));\r\n      window.location.href = \"/app/dashboards\";\r\n    }\r\n  };\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const hash = md5(String(authData.email).trim().toLowerCase());\r\n  // const hash = md5(\"mathews.kyle@gmail.com\".trim().toLowerCase());\r\n\r\n  const gravatar = `https://www.gravatar.com/avatar/${hash}`;\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={24}>\r\n          <Card style={{ padding: \"50px\" }}>\r\n            <Row gutter={16}>\r\n              <Col xs={24} sm={24} md={24} lg={8} style={{ margin: \"0 auto\" }}>\r\n                <Flex\r\n                  className=\"h-100\"\r\n                  flexDirection=\"column\"\r\n                  justifyContent=\"center\"\r\n                >\r\n                  <div style={{ margin: \"0 auto\" }}>\r\n                    <Image\r\n                      src={gravatar}\r\n                      width={200}\r\n                      align=\"center\"\r\n                      style={{ borderRadius: \"50%\" }}\r\n                    />\r\n                  </div>\r\n                  <div style={{ textAlign: \"center\" }}>\r\n                    <h1 className=\"mb-0\">Welcome {authData.firstname}</h1>\r\n                    <span className=\"text-muted\">\r\n                      Last Login: {authData.lastLogin}\r\n                    </span>\r\n                  </div>\r\n                  <Button style={{ marginTop: \"20px\" }} onClick={showModal}>\r\n                    <PlusOutlined />\r\n                    New Project\r\n                  </Button>\r\n                </Flex>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n          {projectListData &&\r\n            projectListData.map((it) => <ProjectList list={it} />)}\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        title=\"New Project\"\r\n        visible={visible}\r\n        onOk={hideModal}\r\n        onCancel={() => setVisible(false)}\r\n        okText=\"Submit\"\r\n        cancelText=\"Cancel\"\r\n      >\r\n        <Form layout=\"vertical\" name=\"control-hooks\" initialValues={values}>\r\n          <Row>\r\n            <Col span={20} style={{ margin: \"0 auto\" }}>\r\n              <Form.Item\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                style={style}\r\n                rules={[{ required: true }]}\r\n                fullwidth\r\n              >\r\n                <Input\r\n                  onChange={(e) =>\r\n                    setValues((prevState) => ({\r\n                      ...prevState,\r\n                      title: e.target.value,\r\n                    }))\r\n                  }\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                style={style}\r\n                rules={[{ required: true }]}\r\n                fullwidth\r\n              >\r\n                <TextArea\r\n                  rows={10}\r\n                  onChange={(e) =>\r\n                    setValues((prevState) => ({\r\n                      ...prevState,\r\n                      description: e.target.value,\r\n                    }))\r\n                  }\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"currency\"\r\n                label=\"Currency\"\r\n                rules={[{ required: true }]}\r\n                fullwidth\r\n              >\r\n                <Select\r\n                  placeholder=\"Select a option and change input text above\"\r\n                  // onChange={onGenderChange}\r\n                  allowClear\r\n                  onChange={(value) =>\r\n                    setValues((prevState) => ({\r\n                      ...prevState,\r\n                      currency: value,\r\n                    }))\r\n                  }\r\n                >\r\n                  <Option value=\"USD\">USD</Option>\r\n                  <Option value=\"EUR\">EUR</Option>\r\n                  <Option value=\"CAD\">CAD</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SalesDashboard;\r\n"],"sourceRoot":""}